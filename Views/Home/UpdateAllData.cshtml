
@model List<CodingChallengeV4.ViewModels.ContactPassData>
@{
    ViewBag.RecordCount = (Model.Count() > 0) ? Model.FirstOrDefault().passedID : 0;
}

<div id="ajaxgrid">
    @{
        WebGrid grid = new WebGrid(source: Model, canPage: false, canSort: false, ajaxUpdateContainerId: "ajaxgrid");
    }
</div>

<!-- jQuery library-->
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"></script>
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>

<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css" />

<!-- Latest compiled JavaScript -->
<!-- add thids links for the error message-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/css/toastr.css" />
<script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/js/toastr.js"></script>

<style type="text/css">

    .Grid {
        border: 1px solid #ccc;
        border-collapse: collapse;
    }

        .Grid th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .Grid th, .Grid td {
            padding: 5px;
            width: 150px;
            border: 1px solid #ccc;
        }

        .Grid, .Grid table td {
            border: 0px solid #ccc;
        }

            .Grid th a, .Grid th a:visited {
                color: #333;
            }
</style>
<h2>Update All Contacts</h2>

<div id="filterDiv">
    Search for <input class="form-control" type="text" id="txtSearchFor" />
</div>
<br />
<br />
@grid.GetHtml(
    htmlAttributes: new { @id = "WebGrid", @class = "Grid" },
    columns: grid.Columns(
grid.Column(header: "", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedID">@item.passedID</div></text>),
grid.Column(header: "First Name", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedfName">@item.passedfName</div></text>),
grid.Column(header: "Last Name", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedlName">@item.passedlName</div></text>),
grid.Column(header: "Display Name", format:@<text><div class="edit" readonly data-id="@item.passedDName" data-propertyname="passedDName">@item.passedDName</div></text>),
grid.Column(header: "eMail Address", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedeMail">@item.passedeMail</div></text>),
grid.Column(header: "eMail Type", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedeMailTypeString">@item.passedeMailTypeString</div></text>)
)
)

@{ 
    int letterCount = 0;

    foreach (var record in Model) {
        letterCount += record.passedfName.Length;
    }

}


<div>
    <label>Number of letters in all the first names: @letterCount</label>
</div>
<div id="dialog" style="display: none;">
</div>

<script>

    $(document).ready(function () {



        $('#toast-container').find('.toast-top-center').removeClass('.toast-top-center');
        toastr.options = {
            "closeButton": true,
            'autoWidth': false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-center-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "500",
            "hideDuration": "1000",
            "timeOut": "3000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        //
        // allow the user to filter the grid.
        //
        $("#txtSearchFor").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#WebGrid tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        //
        // This will handle the double click on any grid element.  If the user clicks on a grid element,
        // we need to determine which row the user clicked on.  Grab each data element from that grid row
        // and store them in a hidden div.  This is needed to verify on the return if any data changed. Then,
        // pass the ID (which is not visible to the user) back to the controller via ajax.  The controller
        // will pick up the data for that contact ID and return a partial view to ajax.  When ajax gets the
        // response back, it will be in html format.  ajax will then renter the popup so the user can update
        // the data for that requested contact ID.
        //
        $("body").on("dblclick", "#WebGrid td", function () {
            //
            // pick up the row that was clicked on and pick up each of the column values and save them
            // into hidden fields in the page.  These will be used later to verify whether the user saved
            // changes to data or save data with no changes
            //
            var row = $(this).closest("tr");
            var ID = row.find("td").eq(0).text();
            $("saveRow").val(row);
            $("#saveID").val(ID);
            $("#saveFirstName").val(row.find("td").eq(1).text());
            $("#saveLastName").val(row.find("td").eq(2).text());
            $("#saveEmailAddress").val(row.find("td").eq(3).text());
            $("#saveEmailAddressType").val(row.find("td").eq(4).text());

            $.ajax({
                url: "/Home/Details",
                type: "POST",
                data: { ID: ID, FirstName: "", LastName: "", EmailAddress: "", EmailType: "" },
                dataType: "html",
                success: function (result) {
                    $('#dialog').html(result);
                    $('#dialog').dialog('open');
                },
                failure: function (result) {
                    alert("FAILURE " + result.responseText);
                },
                error: function (result) {
                    alert("ERROR " + result.responseText);
                }
            });

            return false;
        });
    });
</script>



