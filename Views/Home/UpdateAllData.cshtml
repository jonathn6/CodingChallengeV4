@model List<CodingChallengeV4.ViewModels.ContactPassData>
@{
    ViewBag.Title = "UpdateAllData";
}
@{
    Layout = null;
    WebGrid grid = new WebGrid(source: Model, canPage: true, canSort: false);
}
<!-- jQuery library -->
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://code.jquery.com/jquery-migrate-3.0.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"></script>
<script src="https://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

<link rel="stylesheet" href="https://code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css" />

<!-- Latest compiled JavaScript -->
<!-- add thids links for the error message-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/css/toastr.css" />
<script src="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/1.3.1/js/toastr.js"></script>
<style type="text/css">

    .Grid {
        border: 1px solid #ccc;
        border-collapse: collapse;
    }

        .Grid th {
            background-color: #F7F7F7;
            font-weight: bold;
        }

        .Grid th, .Grid td {
            padding: 5px;
            width: 150px;
            border: 1px solid #ccc;
        }

        .Grid, .Grid table td {
            border: 0px solid #ccc;
        }

            .Grid th a, .Grid th a:visited {
                color: #333;
            }
</style>
<h2>Update All Contacts</h2>

@grid.GetHtml(
    htmlAttributes: new { @id = "WebGrid", @class = "Grid" },
    columns: grid.Columns(
grid.Column(header: "", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedID">@item.passedID</div></text>),
grid.Column(header: "First Name", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedfName">@item.passedfName</div></text>),
grid.Column(header: "Last Name", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedlName">@item.passedlName</div></text>),
grid.Column(header: "eMail Address", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedeMail">@item.passedeMail</div></text>),
grid.Column(header: "eMail Type", format:@<text><div class="edit" data-id="@item.passedID" data-propertyname="passedeMailTypeString">@item.passedeMailTypeString</div></text>)
)
)
<div id="dialog" style="display: none;" >
</div>
<script>
    //
    // define a function to handle the popup division
    //
    $(function () {
        $("#dialog").dialog({
            autoOpen: false,
            modal: true,
            title: "View Details"
        });
    });

    $(document).ready(function () {

        $('#toast-container').find('.toast-top-center').removeClass('.toast-top-center');
        toastr.options = {
            "closeButton": true,
            'autoWidth': false,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-center-center",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "3000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        //
        // This will handle the clicking of the cancel button on the popup.  If the user clicks on the 
        // cancel button on the popup, we need to close the popup and display a toastr message informing
        // the user that the cancel request was processed.  As such, no data in the grid needs to be updated
        //
        $('#dialog').on('click', '#btnCancel', function () { 
            $('#dialog').dialog('close');
            toastr.warning("Your update has been cancelled");
            display();
        });
        //
        // This will handle the double click on any grid element.  If the user clicks on a grid element, 
        // we need to determine which row the user clicked on.  Grab each data element from that grid row
        // and pass the ID (which is not visible to the user) back to the controller via ajax.  The controller
        // will pick up the data for that contact ID and return a partial view to ajax.  When ajax gets the
        // response back, it will be in html format.  ajax will then renter the popup so the user can update
        // the data for that requested contact ID
        //
        $("body").on("dblclick", "#WebGrid td", function () {
            var row = $(this).closest("tr");
            var FirstName = row.find("td").eq(1).text();
            var LastName = row.find("td").eq(2).text();
            var ID = row.find("td").eq(0).text();

            $.ajax({
                url: "/Home/Details",
                type: "POST",
                data: { ID: ID, FirstName: "", LastName: "", EmailAddress: "", EmailType: "" },
                dataType: "html",
                success: function (result) {
                    $('#dialog').html(result);
                    $('#dialog').dialog('open');
                },
                failure: function (result) {
                    alert("FAILURE " + result.responseText);
                },
                error: function (result) {
                    alert("ERROR " + result.responseText);
                }
            });

            return false;
        });
    });
</script>



